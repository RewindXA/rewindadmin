-- Create UI elements
local ScreenGui = Instance.new("ScreenGui")
local ToggleButton = Instance.new("TextButton")
local CommandMenu = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local UIListLayout = Instance.new("UIListLayout")

-- RewindOS UI Elements
local RewindOSFrame = Instance.new("Frame")
local RewindOSTitle = Instance.new("TextLabel")
local RewindOSTextBox = Instance.new("TextBox")
local ExecuteButton = Instance.new("TextButton")

ScreenGui.Parent = game.CoreGui
ScreenGui.ResetOnSpawn = false

-- Toggle Button properties
ToggleButton.Size = UDim2.new(0, 100, 0, 50)
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ToggleButton.TextColor3 = Color3.new(1, 1, 1)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 20
ToggleButton.Text = "Commands"
ToggleButton.Parent = ScreenGui

-- UI Corner for Rounded Button
UICorner.Parent = ToggleButton
UICorner.CornerRadius = UDim.new(0, 10)

-- Command Menu properties
CommandMenu.Size = UDim2.new(0, 300, 0, 400)
CommandMenu.Position = UDim2.new(0, 10, 0, 70)
CommandMenu.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
CommandMenu.Visible = false
CommandMenu.Parent = ScreenGui

-- Add UIListLayout to CommandMenu
UIListLayout.Parent = CommandMenu
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Store Commands in a Table
local commands = {}

-- Helper Functions
local function notify(msg)
    game.StarterGui:SetCore("SendNotification", {
        Title = "REWIND Admin";
        Text = msg;
        Duration = 3;
    })
end

-- Find player by username or display name
local function findPlayer(name)
    name = name:lower()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Name:lower():sub(1, #name) == name or player.DisplayName:lower():sub(1, #name) == name then
            return player
        end
    end
    return nil
end

-- Function to create command buttons in the menu
local function createCommandButton(commandName)
    local commandButton = Instance.new("TextButton")
    commandButton.Size = UDim2.new(1, -20, 0, 40)
    commandButton.Position = UDim2.new(0, 10, 0, 10)
    commandButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    commandButton.TextColor3 = Color3.new(1, 1, 1)
    commandButton.Font = Enum.Font.SourceSansBold
    commandButton.TextSize = 18
    commandButton.Text = commandName
    commandButton.Parent = CommandMenu
    commandButton.MouseButton1Click:Connect(function()
        commands[commandName]()
        notify("Executed: " .. commandName)
    end)
end

-- Command Definitions
commands.tp = function(args)
    local playerName = args and args[1] or ""
    local target = findPlayer(playerName)
    if target then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
        notify("Teleported to " .. target.Name)
    else
        notify("Player not found")
    end
end

commands.kill = function(args)
    local playerName = args and args[1] or ""
    local target = findPlayer(playerName)
    if target then
        target.Character:BreakJoints() -- Kill player
        notify("Killed " .. target.Name)
    else
        notify("Player not found")
    end
end

commands.noclip = function()
    local character = game.Players.LocalPlayer.Character
    local runService = game:GetService("RunService")
    local noclip = true

    runService.Stepped:Connect(function()
        if noclip then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)
    
    notify("Noclip Enabled")
end

commands.tptool = function()
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "Teleport Tool"
    
    tool.Activated:Connect(function()
        if mouse.Target then
            player.Character:SetPrimaryPartCFrame(CFrame.new(mouse.Hit.p + Vector3.new(0, 5, 0)))
        end
    end)
    
    tool.Parent = player.Backpack
    notify("Teleport Tool Equipped!")
end

commands.rspy = function()
    notify("Loading SimpleSpy...")
    loadstring(game:HttpGet("https://github.com/exxtremestuffs/SimpleSpySource/raw/master/SimpleSpy.lua"))()
end

commands.dex = function()
    notify("Loading Dex Explorer...")
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua", true))()
end

commands.esp = function()
    local runService = game:GetService("RunService")
    local function createEspBox(player)
        if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local highlight = Instance.new("Highlight")
            highlight.Name = "ESP"
            highlight.Adornee = player.Character
            highlight.FillColor = Color3.fromRGB(0, 0, 255)
            highlight.OutlineColor = Color3.new(0, 0, 255)
            highlight.FillTransparency = 0.7
            highlight.OutlineTransparency = 0
            highlight.Parent = player.Character
        end
    end

    -- Add ESP to all players
    for _, player in pairs(game.Players:GetPlayers()) do
        createEspBox(player)
    end

    -- Keep ESP updated
    game.Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function()
            createEspBox(player)
        end)
    end)

    notify("Blue ESP Enabled!")
end

commands.help = function()
    notify("Available Commands: tp, kill, noclip, tptool, rspy, dex, esp, help")
end

-- Add command buttons to the Command Menu
for commandName, _ in pairs(commands) do
    createCommandButton(commandName)
end

-- Toggle Menu Visibility
local menuVisible = false
ToggleButton.MouseButton1Click:Connect(function()
    menuVisible = not menuVisible
    CommandMenu.Visible = menuVisible
end)

-- Make CommandMenu draggable
local UIS = game:GetService("UserInputService")
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    CommandMenu.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

CommandMenu.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = CommandMenu.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

CommandMenu.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Chat Command Execution
game.Players.LocalPlayer.Chatted:Connect(function(msg)
    if msg:sub(1, 1) == ";" then
        local input = msg:sub(2)
        local split = input:split(" ")
        local command = split[1]:lower()
        table.remove(split, 1)
       
 if commands[command] then
            commands[command](split)
            notify("Executed: " .. command)
        else
            notify("Unknown Command: " .. command)
        end
    end
end)

-- RewindOS Executor properties
RewindOSFrame.Parent = ScreenGui
RewindOSFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
RewindOSFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
RewindOSFrame.Size = UDim2.new(0, 300, 0, 200)
RewindOSFrame.Active = true
RewindOSFrame.Draggable = true  -- Make it draggable

-- Title Properties
RewindOSTitle.Parent = RewindOSFrame
RewindOSTitle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
RewindOSTitle.Size = UDim2.new(1, 0, 0, 30)
RewindOSTitle.Font = Enum.Font.SourceSans
RewindOSTitle.Text = "RewindOS Executor"
RewindOSTitle.TextColor3 = Color3.new(1, 1, 1)
RewindOSTitle.TextSize = 20

-- TextBox Properties
RewindOSTextBox.Parent = RewindOSFrame
RewindOSTextBox.Position = UDim2.new(0, 0, 0.15, 0)
RewindOSTextBox.Size = UDim2.new(1, 0, 0.6, 0)
RewindOSTextBox.Text = ""
RewindOSTextBox.PlaceholderText = "Enter Lua code here"
RewindOSTextBox.Font = Enum.Font.SourceSans
RewindOSTextBox.TextSize = 18
RewindOSTextBox.TextColor3 = Color3.new(0, 0, 0)
RewindOSTextBox.BackgroundColor3 = Color3.new(1, 1, 1)
RewindOSTextBox.MultiLine = true

-- Execute Button Properties
ExecuteButton.Parent = RewindOSFrame
ExecuteButton.Size = UDim2.new(1, 0, 0.25, 0)
ExecuteButton.Position = UDim2.new(0, 0, 0.75, 0)
ExecuteButton.Text = "Execute"
ExecuteButton.Font = Enum.Font.SourceSansBold
ExecuteButton.TextSize = 20
ExecuteButton.TextColor3 = Color3.new(1, 1, 1)
ExecuteButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

-- Function to Execute the Code from TextBox
ExecuteButton.MouseButton1Click:Connect(function()
    local code = RewindOSTextBox.Text
    local success, result = pcall(loadstring(code))
    if success then
        notify("Execution Successful")
    else
        notify("Error: " .. tostring(result))
    end
end)
